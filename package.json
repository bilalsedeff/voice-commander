{
  "name": "voice-mcp-gateway",
  "version": "1.0.0",
  "description": "A real-time voice-enabled MCP aggregator that orchestrates multiple MCP servers through natural speech commands",
  "type": "module",
  "main": "dist/gateway/voice-server.js",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "dev": "concurrently --prefix-colors \"blue,green,yellow\" --names \"DOCKER,VOICE,MCP\" \"npm run docker:services\" \"npm run dev:voice\" \"npm run mcp:desktop-commander\"",
    "dev:full": "concurrently --prefix-colors \"blue,green,yellow,cyan\" --names \"DOCKER,VOICE,MCP,MONITOR\" \"npm run docker:services\" \"npm run dev:voice\" \"npm run mcp:desktop-commander\" \"npm run dev:monitor\"",
    "dev:quick": "concurrently --prefix-colors \"blue,green\" --names \"DOCKER,VOICE\" \"npm run docker:services\" \"npm run dev:voice\"",
    "dev:voice": "npx tsx src/gateway/voice-server.ts",
    "dev:voice:container": "wait-on tcp:postgres:5432 tcp:redis:6379 && npx tsx watch src/gateway/voice-server.ts",
    "dev:monitor": "wait-on --timeout 30000 --interval 2000 http-get://localhost:8720/health && npx tsx src/performance/real-time-monitor.ts",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up --build",
    "docker:services": "docker-compose -f docker-compose.dev.yml up postgres redis --build -d",
    "docker:stop": "docker-compose -f docker-compose.dev.yml down",
    "docker:clean": "docker-compose -f docker-compose.dev.yml down -v --remove-orphans && docker system prune -f",
    "build": "tsc",
    "start": "node dist/gateway/voice-server.js",
    "test": "jest --config backend/jest.config.js",
    "test:all": "concurrently --prefix-colors \"green,yellow,cyan,magenta,red\" --names \"UNIT,VOICE,MCP,INTEG,SEC\" \"npm run test:unit\" \"npm run test:voice\" \"npm run test:mcp\" \"npm run test:integration\" \"npm run test:security\"",
    "test:unit": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/unit",
    "test:voice": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/voice",
    "test:mcp": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/integration",
    "test:integration": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/integration",
    "test:integration:jest": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/integration",
    "test:integration:week3": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/integration",
    "test:integration:performance": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/performance",
    "test:performance": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/performance",
    "test:security": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/security",
    "lint": "eslint backend/src/**/*.ts backend/__tests__/**/*.ts",
    "type-check": "tsc --noEmit",
    "validate": "npm run type-check && npm run lint && npm run test:unit",
    "validate:full": "npm run validate && npm run test:all",
    "mcp:desktop-commander": "npx -y @wonderwhy-er/desktop-commander",
    "db:migrate": "echo 'Database migrations not yet implemented'",
    "db:seed": "echo 'Database seeding not yet implemented'",
    "security:scan": "npm audit",
    "security:audit": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/security",
    "security:pentest": "jest --config backend/jest.config.js --testPathPattern=backend/__tests__/security",
    "security:full": "npm run security:scan && npm run security:audit",
    "benchmark": "npx tsx backend/__tests__/performance/performance-benchmark.ts",
    "monitor": "npx tsx src/performance/real-time-monitor.ts",
    "deploy:prod": "echo 'Production deployment not yet implemented'",
    "dev:kill": "taskkill //F //IM node.exe //T 2>nul || echo 'No node processes to kill'",
    "dev:clean": "npm run dev:kill && npm run docker:stop"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.18.1",
    "avr-vad": "^1.0.9",
    "axios": "^1.7.4",
    "bcrypt": "^5.1.1",
    "cors": "^2.8.5",
    "dotenv": "^16.6.1",
    "express": "^4.18.3",
    "form-data": "^4.0.0",
    "helmet": "^7.1.0",
    "jsonwebtoken": "^9.0.2",
    "multer": "^1.4.5-lts.1",
    "openai": "^5.23.1",
    "pg": "^8.12.0",
    "redis": "^4.7.0",
    "socket.io": "^4.8.1",
    "uuid": "^10.0.0",
    "winston": "^3.17.0",
    "ws": "^8.18.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@babel/core": "^7.28.4",
    "@babel/preset-env": "^7.28.3",
    "@types/bcrypt": "^5.0.2",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.12",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/multer": "^1.4.12",
    "@types/node": "^22.5.4",
    "@types/pg": "^8.11.8",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.5.12",
    "@typescript-eslint/eslint-plugin": "^8.4.0",
    "@typescript-eslint/parser": "^8.4.0",
    "@wonderwhy-er/desktop-commander": "^0.2.15",
    "babel-jest": "^30.1.2",
    "chalk": "^5.6.2",
    "concurrently": "^9.2.1",
    "eslint": "^9.9.1",
    "jest": "^29.7.0",
    "nodemon": "^3.1.4",
    "prettier": "^3.3.3",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "tsx": "^4.19.0",
    "typescript": "^5.5.4",
    "wait-on": "^9.0.1"
  },
  "keywords": [
    "voice",
    "mcp",
    "gateway",
    "aggregator",
    "speech",
    "ai",
    "assistant",
    "typescript",
    "websocket",
    "real-time"
  ],
  "author": "Voice MCP Gateway Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/voice-mcp/gateway.git"
  },
  "bugs": {
    "url": "https://github.com/voice-mcp/gateway/issues"
  },
  "homepage": "https://github.com/voice-mcp/gateway#readme"
}
